import csv
import matplotlib.pyplot as plt # for plotting
import numpy as np

def readCSV(file):
    '''
    input:
        file - the signal csv
    output:
        stores time and signal data into arrays
    '''
    t = []
    sig = []

    with open(file) as f:
        # open the csv file
        reader = csv.reader(f)
        for row in reader:
            # read the rows 1 one by one
            t.append(float(row[0])) # leftmost column
            sig.append(float(row[1])) # second column

    return t,sig

def sigplot(t,s):

    fig = plt.figure()
    plt.plot(t,s,'b-*')
    plt.xlabel('Time [s]')
    plt.ylabel('Signal')
    plt.title('Signal vs Time')

    return fig

def plotfft(t,s):
    Fs = len(s)/t[-1] # sample rate
    Ts = 1.0/Fs # sampling interval
    ts = np.arange(0,t[-1],Ts) # time vector
    n = len(s) # length of the signal
    k = np.arange(n)
    T = n/Fs
    frq = k/T # two sides frequency range
    frq = frq[range(int(n/2))] # one side frequency range
    Y = np.fft.fft(s)/n # fft computing and normalization
    Y = Y[range(int(n/2))]

    fig, (ax1, ax2) = plt.subplots(2, 1)
    ax1.plot(ts,s,'b')
    ax1.set_xlabel('Time')
    ax1.set_ylabel('Amplitude')
    ax2.loglog(frq,abs(Y),'b') # plotting the fft
    ax2.set_xlabel('Freq (Hz)')
    ax2.set_ylabel('|Y(freq)|')

    return fig


def maf(t,s,n):
    avg = []
    a = len(s)
    for i in range(a-1, n-1, -1):
        avg.append(sum(s[i:i-n:-1])/n)
        if i==n:
            avg.append( (sum(s[i-1:i-n:-1])+s[0])/n)
    avg = avg[::-1]
    Fs1 = len(avg)/t[-1] # sample rate
    Ts1 = 1.0/Fs1 # sampling interval
    ts1 = np.arange(0,t[-1],Ts1) # time vector
    k1 = np.arange(len(avg))
    T1 = len(avg)/Fs1
    frq1 = k1/T1 # two sides frequency range
    frq1 = frq1[range(int(len(avg)/2))] # one side frequency range
    Y1 = np.fft.fft(avg)/len(avg) # fft computing and normalization
    Y1 = Y1[range(int(len(avg)/2))]

    Fs2 = len(s)/t[-1] # sample rate
    Ts2 = 1.0/Fs2 # sampling interval
    ts2 = np.arange(0,t[-1],Ts2) # time vector
    k2 = np.arange(a)
    T2 = a/Fs2
    frq2 = k2/T2 # two sides frequency range
    frq2 = frq2[range(int(a/2))] # one side frequency range
    Y2 = np.fft.fft(s)/a # fft computing and normalization
    Y2 = Y2[range(int(a/2))]

    fig, (ax1, ax2) = plt.subplots(2, 1)
    fig.subplots_adjust(hspace=0.5)
    ax1.plot(ts2,s,'k')
    ax1.plot(ts1,avg,'r')
    ax1.set_xlabel('Time',fontsize=10)
    ax1.set_ylabel('Amplitude',fontsize=10)
    title = 'Signal vs. Time (X = '+str(n)+')'
    ax1.set_title(title,fontsize=12)
    ax2.loglog(frq2,abs(Y2),'k') # plotting the fft
    ax2.loglog(frq1,abs(Y1),'r') # plotting the fft
    ax2.set_xlabel('Freq (Hz)',fontsize=10)
    ax2.set_ylabel('|Y(freq)|',fontsize=10)
    ax2.set_title('Amplitude vs. Frequency',fontsize=12)

    return fig

def iir(t,s,A,B):
    out = []
    out.append(s[0])
    for i in range(1,len(s),1):
        out.append(A*out[i-1] + B*s[i])
    Fs = len(out)/t[-1] # sample rate
    Ts = 1.0/Fs # sampling interval
    ts = np.arange(0,t[-1],Ts) # time vector
    n = len(out) # length of the signal
    k = np.arange(n)
    T = n/Fs
    frq = k/T # two sides frequency range
    frq = frq[range(int(n/2))] # one side frequency range
    Y1 = np.fft.fft(out)/n # fft computing and normalization
    Y1 = Y1[range(int(n/2))]

    Y2 = np.fft.fft(s)/n # fft computing and normalization
    Y2 = Y2[range(int(n/2))]

    fig, (ax1, ax2) = plt.subplots(2, 1)
    fig.subplots_adjust(hspace=0.5)
    ax1.plot(ts,s,'k')
    ax1.plot(ts,out,'r')
    ax1.set_xlabel('Time',fontsize=10)
    ax1.set_ylabel('Amplitude',fontsize=10)
    title = 'Signal vs. Time (A = '+str(A)+', B = '+str(B)+')'
    ax1.set_title(title,fontsize=12)
    ax2.loglog(frq,abs(Y2),'k') # plotting the fft
    ax2.loglog(frq,abs(Y1),'r') # plotting the fft
    ax2.set_xlabel('Freq (Hz)',fontsize=10)
    ax2.set_ylabel('|Y(freq)|',fontsize=10)
    ax2.set_title('Amplitude vs. Frequency',fontsize=12)
    
    return fig

def fir(t,s,C):
    out = []
    for i in range(len(s)-1, len(C)-1, -1):
        out.append( sum(np.multiply(np.array(C), np.array(s[i:i-len(C):-1]))) )
    out = out[::-1]

    Fs = len(out)/t[-1] # sample rate
    Ts = 1.0/Fs # sampling interval
    ts = np.arange(0,t[-1],Ts) # time vector
    k = np.arange(len(out))
    T = len(out)/Fs
    frq = k/T # two sides frequency range
    frq = frq[range(int(len(out)/2))] # one side frequency range
    Y1 = np.fft.fft(out)/len(out) # fft computing and normalization
    Y1 = Y1[range(int(len(out)/2))]

    Fs = len(s)/t[-1]
    Ts = 1.0/Fs
    k = np.arange(len(s))
    T = len(s)/Fs
    frq1 = k/T
    frq1 = frq1[range(int(len(s)/2))]
    Y2 = np.fft.fft(s)/len(s) # fft computing and normalization
    Y2 = Y2[range(int(len(s)/2))]

    fig, (ax1, ax2) = plt.subplots(2, 1)
    fig.subplots_adjust(hspace=0.5)
    ax1.plot(t,s,'k')
    ax1.plot(ts,out,'r')
    ax1.set_xlabel('Time',fontsize=10)
    ax1.set_ylabel('Amplitude',fontsize=10)
    title = 'Signal vs. Time'
    ax1.set_title(title,fontsize=12)
    ax2.loglog(frq1,abs(Y2),'k') # plotting the fft
    ax2.loglog(frq,abs(Y1),'r') # plotting the fft
    ax2.set_xlabel('Freq (Hz)',fontsize=10)
    ax2.set_ylabel('|Y(freq)|',fontsize=10)
    ax2.set_title('Amplitude vs. Frequency',fontsize=12)
    
    return fig


tA,sigA = readCSV('sigA.csv')
tB,sigB = readCSV('sigB.csv')
tC,sigC = readCSV('sigC.csv')
tD,sigD = readCSV('sigD.csv')

f = sigplot(tA,sigA)
f.savefig('sigA')
f = sigplot(tB,sigB)
f.savefig('sigB')
f = sigplot(tC,sigC)
f.savefig('sigC')
f = sigplot(tD,sigD)
f.savefig('sigD')

f = maf(tA,sigA,51) 
f.savefig('sigA_MAF')
f = maf(tB,sigB,36)
f.savefig('sigB_MAF')
f = maf(tC,sigC,21)
f.savefig('sigC_MAF')
f = maf(tD,sigD,9)
f.savefig('sigD_MAF')

f = iir(tA,sigA,0.95,0.05)
f.savefig('sigA_IIR')
f = iir(tB,sigB,0.95,0.05)
f.savefig('sigB_IIR')
f = iir(tC,sigC,0.95,0.05)
f.savefig('sigC_IIR')
f = iir(tD,sigD,0.95,0.05)
f.savefig('sigD_IIR')

h1 = [
    0.000000000000000000,
    0.000000145404338621,
    0.000000555575539163,
    0.000001185942434145,
    0.000001984607885523,
    0.000002892388160588,
    0.000003842877389819,
    0.000004762544754746,
    0.000005570872996230,
    0.000006180547626520,
    0.000006497706848471,
    0.000006422262611541,
    0.000005848303447992,
    0.000004664589718870,
    0.000002755151645497,
    0.000000000000000000,
    -0.000003724041427130,
    -0.000008542373473977,
    -0.000014581522520510,
    -0.000021967899323895,
    -0.000030826412167037,
    -0.000041278932663488,
    -0.000053442614710410,
    -0.000067428069403219,
    -0.000083337401193829,
    -0.000101262113159020,
    -0.000121280891913072,
    -0.000143457285414002,
    -0.000167837289637491,
    -0.000194446862787729,
    -0.000223289388339129,
    -0.000254343110716253,
    -0.000287558569779833,
    -0.000322856062454051,
    -0.000360123161764237,
    -0.000399212325217169,
    -0.000439938625812120,
    -0.000482077639986717,
    -0.000525363527447701,
    -0.000569487338086697,
    -0.000614095581013164,
    -0.000658789090133609,
    -0.000703122219655399,
    -0.000746602401388159,
    -0.000788690093754049,
    -0.000828799150004300,
    -0.000866297630283093,
    -0.000900509078896742,
    -0.000930714284457679,
    -0.000956153536505927,
    -0.000976029387798135,
    -0.000989509926733592,
    -0.000995732559400569,
    -0.000993808295521939,
    -0.000982826527207600,
    -0.000961860283937304,
    -0.000929971941658895,
    -0.000886219358353572,
    -0.000829662402953388,
    -0.000759369839159349,
    -0.000674426520564309,
    -0.000573940848595693,
    -0.000457052440220375,
    -0.000322939948157168,
    -0.000170828972577949,
    0.000000000000000000,
    0.000190203697671243,
    0.000400368273153349,
    0.000631001693600885,
    0.000882526381863242,
    0.001155272181039943,
    0.001449469713700035,
    0.001765244205932193,
    0.002102609844473788,
    0.002461464732532130,
    0.002841586506569255,
    0.003242628672290262,
    0.003664117713379691,
    0.004105451021203207,
    0.004565895687773317,
    0.005044588197814543,
    0.005540535048809659,
    0.006052614320523339,
    0.006579578207748588,
    0.007120056521974672,
    0.007672561159407321,
    0.008235491524360532,
    0.008807140888565053,
    0.009385703658484063,
    0.009969283514374389,
    0.010555902376666433,
    0.011143510147339221,
    0.011729995166420459,
    0.012313195316623312,
    0.012890909702516601,
    0.013460910824584124,
    0.014020957163127552,
    0.014568806082265101,
    0.015102226960329078,
    0.015619014449815016,
    0.016117001767722013,
    0.016594073915679155,
    0.017048180728697442,
    0.017477349651734555,
    0.017879698144514681,
    0.018253445617202480,
    0.018596924802575618,
    0.018908592474250328,
    0.019187039425258179,
    0.019430999626808561,
    0.019639358493352382,
    0.019811160187032037,
    0.019945613902197162,
    0.020042099078816079,
    0.020100169502243356,
    0.020119556255834326,
    0.020100169502243356,
    0.020042099078816079,
    0.019945613902197162,
    0.019811160187032040,
    0.019639358493352382,
    0.019430999626808564,
    0.019187039425258182,
    0.018908592474250328,
    0.018596924802575618,
    0.018253445617202480,
    0.017879698144514681,
    0.017477349651734558,
    0.017048180728697442,
    0.016594073915679158,
    0.016117001767722017,
    0.015619014449815016,
    0.015102226960329080,
    0.014568806082265103,
    0.014020957163127554,
    0.013460910824584124,
    0.012890909702516596,
    0.012313195316623312,
    0.011729995166420459,
    0.011143510147339223,
    0.010555902376666437,
    0.009969283514374391,
    0.009385703658484063,
    0.008807140888565053,
    0.008235491524360532,
    0.007672561159407324,
    0.007120056521974673,
    0.006579578207748588,
    0.006052614320523342,
    0.005540535048809659,
    0.005044588197814543,
    0.004565895687773319,
    0.004105451021203207,
    0.003664117713379690,
    0.003242628672290262,
    0.002841586506569257,
    0.002461464732532131,
    0.002102609844473790,
    0.001765244205932194,
    0.001449469713700036,
    0.001155272181039943,
    0.000882526381863242,
    0.000631001693600885,
    0.000400368273153349,
    0.000190203697671243,
    0.000000000000000000,
    -0.000170828972577949,
    -0.000322939948157167,
    -0.000457052440220375,
    -0.000573940848595693,
    -0.000674426520564310,
    -0.000759369839159349,
    -0.000829662402953388,
    -0.000886219358353573,
    -0.000929971941658895,
    -0.000961860283937306,
    -0.000982826527207601,
    -0.000993808295521939,
    -0.000995732559400568,
    -0.000989509926733592,
    -0.000976029387798135,
    -0.000956153536505928,
    -0.000930714284457679,
    -0.000900509078896743,
    -0.000866297630283094,
    -0.000828799150004300,
    -0.000788690093754051,
    -0.000746602401388159,
    -0.000703122219655399,
    -0.000658789090133609,
    -0.000614095581013164,
    -0.000569487338086698,
    -0.000525363527447702,
    -0.000482077639986717,
    -0.000439938625812120,
    -0.000399212325217169,
    -0.000360123161764237,
    -0.000322856062454053,
    -0.000287558569779833,
    -0.000254343110716253,
    -0.000223289388339129,
    -0.000194446862787728,
    -0.000167837289637491,
    -0.000143457285414002,
    -0.000121280891913073,
    -0.000101262113159020,
    -0.000083337401193830,
    -0.000067428069403219,
    -0.000053442614710410,
    -0.000041278932663488,
    -0.000030826412167037,
    -0.000021967899323895,
    -0.000014581522520510,
    -0.000008542373473977,
    -0.000003724041427130,
    0.000000000000000000,
    0.000002755151645497,
    0.000004664589718870,
    0.000005848303447992,
    0.000006422262611541,
    0.000006497706848471,
    0.000006180547626520,
    0.000005570872996230,
    0.000004762544754746,
    0.000003842877389819,
    0.000002892388160588,
    0.000001984607885523,
    0.000001185942434145,
    0.000000555575539163,
    0.000000145404338621,
    0.000000000000000000,
]
h2 = [
    0.000000000000000000,
    0.000001362373262264,
    0.000006672731031130,
    0.000017915754010629,
    0.000037314165226615,
    0.000067373453488692,
    0.000110920076223299,
    0.000171129986974283,
    0.000251544543241352,
    0.000356071190407984,
    0.000488966778523625,
    0.000654801937168897,
    0.000858405591758571,
    0.001104789430890086,
    0.001399052904149428,
    0.001746270116349268,
    0.002151360759407147,
    0.002618947958566805,
    0.003153206577703624,
    0.003757706103001320,
    0.004435252681944719,
    0.005187735215459626,
    0.006015980569538195,
    0.006919622978111987,
    0.007896992545934787,
    0.008945027429119018,
    0.010059213777774856,
    0.011233556881598801,
    0.012460586182238578,
    0.013731395927644063,
    0.015035722269383113,
    0.016362056573387476,
    0.017697793659536682,
    0.019029412638997451,
    0.020342687013707519,
    0.021622919772388026,
    0.022855198392626796,
    0.024024663966567709,
    0.025116788132328260,
    0.026117651133467555,
    0.027014214158250543,
    0.027794579136807673,
    0.028448229399072981,
    0.028966245014805742,
    0.029341487238084815,
    0.029568747245582585,
    0.029644855268510583,
    0.029568747245582585,
    0.029341487238084819,
    0.028966245014805745,
    0.028448229399072981,
    0.027794579136807673,
    0.027014214158250543,
    0.026117651133467559,
    0.025116788132328267,
    0.024024663966567703,
    0.022855198392626799,
    0.021622919772388029,
    0.020342687013707519,
    0.019029412638997458,
    0.017697793659536682,
    0.016362056573387483,
    0.015035722269383121,
    0.013731395927644056,
    0.012460586182238579,
    0.011233556881598805,
    0.010059213777774852,
    0.008945027429119023,
    0.007896992545934782,
    0.006919622978111990,
    0.006015980569538197,
    0.005187735215459625,
    0.004435252681944722,
    0.003757706103001323,
    0.003153206577703625,
    0.002618947958566804,
    0.002151360759407150,
    0.001746270116349269,
    0.001399052904149429,
    0.001104789430890086,
    0.000858405591758570,
    0.000654801937168898,
    0.000488966778523625,
    0.000356071190407983,
    0.000251544543241352,
    0.000171129986974283,
    0.000110920076223299,
    0.000067373453488692,
    0.000037314165226615,
    0.000017915754010629,
    0.000006672731031130,
    0.000001362373262264,
    0.000000000000000000,
]
h3 = [
    0.000000000000000000,
    -0.000000733187507994,
    -0.000002514832169553,
    -0.000004663189391103,
    -0.000006411912043391,
    -0.000006894650075208,
    -0.000005128921027786,
    0.000000000000000000,
    0.000009754363726571,
    0.000025557561404639,
    0.000049005219802397,
    0.000081872943140811,
    0.000126119913694109,
    0.000183887634646637,
    0.000257493196406908,
    0.000349416569001100,
    0.000462281565774996,
    0.000598830284134460,
    0.000761891003573286,
    0.000954339705406193,
    0.001179055567694072,
    0.001438870977808257,
    0.001736516788789889,
    0.002074563718984522,
    0.002455360952379098,
    0.002880973134926539,
    0.003353117075610483,
    0.003873099546309844,
    0.004441757628542494,
    0.005059403075507749,
    0.005725772142930002,
    0.006439982291319788,
    0.007200497075605886,
    0.008005100416757878,
    0.008850881296018204,
    0.009734229728566586,
    0.010650844663521859,
    0.011595754225546215,
    0.012563348464977427,
    0.013547424523904094,
    0.014541243860821495,
    0.015537600912594417,
    0.016528902315624129,
    0.017507255564510497,
    0.018464565762032634,
    0.019392638914479399,
    0.020283290056267139,
    0.021128454351758700,
    0.021920299223858908,
    0.022651335501065052,
    0.023314525559019444,
    0.023903386460090124,
    0.024412086164923179,
    0.024835531002085399,
    0.025169442733675097,
    0.025410423743004226,
    0.025556009091159522,
    0.025604704437664948,
    0.025556009091159525,
    0.025410423743004226,
    0.025169442733675097,
    0.024835531002085399,
    0.024412086164923172,
    0.023903386460090128,
    0.023314525559019444,
    0.022651335501065056,
    0.021920299223858911,
    0.021128454351758696,
    0.020283290056267146,
    0.019392638914479399,
    0.018464565762032644,
    0.017507255564510504,
    0.016528902315624129,
    0.015537600912594422,
    0.014541243860821501,
    0.013547424523904100,
    0.012563348464977434,
    0.011595754225546215,
    0.010650844663521864,
    0.009734229728566589,
    0.008850881296018210,
    0.008005100416757878,
    0.007200497075605891,
    0.006439982291319788,
    0.005725772142930000,
    0.005059403075507749,
    0.004441757628542499,
    0.003873099546309850,
    0.003353117075610484,
    0.002880973134926539,
    0.002455360952379100,
    0.002074563718984522,
    0.001736516788789891,
    0.001438870977808259,
    0.001179055567694071,
    0.000954339705406193,
    0.000761891003573287,
    0.000598830284134461,
    0.000462281565774996,
    0.000349416569001100,
    0.000257493196406909,
    0.000183887634646636,
    0.000126119913694109,
    0.000081872943140812,
    0.000049005219802397,
    0.000025557561404639,
    0.000009754363726571,
    0.000000000000000000,
    -0.000005128921027786,
    -0.000006894650075208,
    -0.000006411912043391,
    -0.000004663189391103,
    -0.000002514832169553,
    -0.000000733187507994,
    0.000000000000000000,
]
h4 = [
    -0.000000000000000003,
    0.000000000000000006,
    -0.000000000022651174,
    -0.000000000170046526,
    -0.000000000660661365,
    -0.000000001782996575,
    -0.000000003720217555,
    -0.000000006194338750,
    -0.000000007875385498,
    -0.000000005502418388,
    0.000000007328544679,
    0.000000041737775121,
    0.000000115496941834,
    0.000000255287812352,
    0.000000499195467390,
    0.000000899285100601,
    0.000001524040596037,
    0.000002460366431416,
    0.000003814776507278,
    0.000005713319772311,
    0.000008299729323096,
    0.000011731235804067,
    0.000016171464289554,
    0.000021779842906825,
    0.000028696996936810,
    0.000037025688420802,
    0.000046806991124386,
    0.000057991564744991,
    0.000070406108849783,
    0.000083715332057012,
    0.000097380058704965,
    0.000110612404447950,
    0.000122329272263663,
    0.000131105737565973,
    0.000135130190124207,
    0.000132163364778378,
    0.000119503605450870,
    0.000093960850816061,
    0.000051841889282862,
    -0.000007646705898070,
    -0.000088749046468138,
    -0.000202351510841388,
    -0.000361382407765469,
    -0.000580508637484712,
    -0.000875621269639137,
    -0.001263045137172128,
    -0.001758426026207715,
    -0.002375282099262735,
    -0.003123251312696220,
    -0.004006119212704459,
    -0.005019765422282462,
    -0.006150215204659698,
    -0.007372017414956931,
    -0.008647185414974804,
    -0.009924928262506304,
    -0.011142363224586890,
    -0.012226337829767784,
    -0.013096403792196391,
    -0.013668882687594749,
    -0.013861853176446309,
    -0.013600782450163889,
    -0.012824431641675207,
    -0.011490596868777143,
    -0.009581213325035556,
    -0.007106355587018369,
    -0.004106715674977847,
    -0.000654229939997585,
    0.003149349015116828,
    0.007175987776627102,
    0.011276901999462390,
    0.015289802816989708,
    0.019047432056049154,
    0.022386837877916864,
    0.025158762735863097,
    0.027236485070476546,
    0.028523478979840852,
    0.028959331442581657,
    0.028523478979840519,
    0.027236485070476470,
    0.025158762735863434,
    0.022386837877916878,
    0.019047432056048905,
    0.015289802816989814,
    0.011276901999462574,
    0.007175987776627086,
    0.003149349015116654,
    -0.000654229939997628,
    -0.004106715674977761,
    -0.007106355587018393,
    -0.009581213325035608,
    -0.011490596868777129,
    -0.012824431641675174,
    -0.013600782450163881,
    -0.013861853176446285,
    -0.013668882687594728,
    -0.013096403792196405,
    -0.012226337829767777,
    -0.011142363224586858,
    -0.009924928262506294,
    -0.008647185414974813,
    -0.007372017414956931,
    -0.006150215204659672,
    -0.005019765422282451,
    -0.004006119212704469,
    -0.003123251312696224,
    -0.002375282099262726,
    -0.001758426026207716,
    -0.001263045137172136,
    -0.000875621269639144,
    -0.000580508637484709,
    -0.000361382407765471,
    -0.000202351510841394,
    -0.000088749046468144,
    -0.000007646705898065,
    0.000051841889282859,
    0.000093960850816058,
    0.000119503605450867,
    0.000132163364778383,
    0.000135130190124208,
    0.000131105737565967,
    0.000122329272263659,
    0.000110612404447955,
    0.000097380058704963,
    0.000083715332057008,
    0.000070406108849781,
    0.000057991564744996,
    0.000046806991124388,
    0.000037025688420794,
    0.000028696996936805,
    0.000021779842906828,
    0.000016171464289550,
    0.000011731235804061,
    0.000008299729323093,
    0.000005713319772317,
    0.000003814776507281,
    0.000002460366431411,
    0.000001524040596033,
    0.000000899285100606,
    0.000000499195467389,
    0.000000255287812345,
    0.000000115496941833,
    0.000000041737775130,
    0.000000007328544681,
    -0.000000005502418394,
    -0.000000007875385500,
    -0.000000006194338745,
    -0.000000003720217557,
    -0.000000001782996580,
    -0.000000000660661364,
    -0.000000000170046520,
    -0.000000000022651170,
    0.000000000000000001,
    -0.000000000000000003,
]

f = fir(tA,sigA,h1)
f.suptitle('Low Pass: fL = 100Hz, bL = 200Hz, 231 coefficients')
f.savefig('sigA_FIR')
f = fir(tB,sigB,h2)
f.suptitle('Low Pass: fL = 33Hz, bL = 165Hz, 93 coefficients')
f.savefig('sigB_FIR')
f = fir(tC,sigC,h3)
f.suptitle('Low Pass: fL = 25Hz, bL = 100Hz, 115 coefficients')
f.savefig('sigC_FIR')
f = fir(tD,sigD,h4)
f.suptitle('Band Pass: fL = 4Hz, bL = 24Hz, fH = 12Hz, bH = 4Hz, 153 coefficients')
f.savefig('sigD_FIR')




# plotfft(tA,sigA)
# plotfft(tB,sigB)
# plotfft(tC,sigC)
# plotfft(tD,sigD)



